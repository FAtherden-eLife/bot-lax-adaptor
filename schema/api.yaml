swagger: "2.0"

info:
  version: 1.0.0
  title: bot-lax-adaptor api
  description: a web interface to interacting with lax via the bot-lax-adaptor

schemes:
  - https

#basePath: /

definitions:
  error:
    type: object
    properties:
      status:
        type: string
        description: the final state of the article supplied
      code:
        type: string
        description: a succinct identifier to help class the type of error
      message:
        type: string
        description: a more verbose explanation of the problem
      trace:
        type: string
        description: a very detailed block of text describing exactly where the problem is

  success:
    type: object
    properties:
      status:
        type: string
        description: the final state of the article supplied
      ajson:
        type: object
        description: the final article-json, including overrides
      override:
        type: object
        description: the overrides provided

paths:
  /xml:
    get:
      responses:
        200:
          description: a list of all article xml files that have been uploaded
    post:
      description: upload an xml file, generate article-json from it, validate article-json, send article-json to test ingest
      consumes:
        - multipart/form-data
      parameters:
        - name: xml
          description: the xml file to upload
          in: formData
          type: file
        - name: override
          description: 'a pipe separated key and value. for example: key|value. values must be quoted if strings: key|"value"'
          in: formData
          type: array
          collectionFormat: multi
          uniqueItems: true
          items:
            type: string
            
        #- name: override
        #  in: body
        #  description: "a pipe separated key and value, for example: title|new title"
        #  schema:
        #    properties:
        #      override:
        #        type: object
        #        example:
        #          title: new title!
        #          abstract:
        #            doi: new, totally invalid, doi!
        #            content:
        #              - type: paragraph
        #                text: new valid paragraph!

      responses:
        200:
          description: all steps completed successfully
          schema:
            $ref: "#/definitions/success"
        400:
          description: the data you sent us is bad in some way
          schema:
            $ref: "#/definitions/error"

  /article-json:
    get:
      responses:
        200:
          description: a list of all article json files that have been generated from uploaded xml

  /article-json/{filename}:
    get:
      description: download an article-json file
      parameters:
        - name: filename
          in: path
          type: string
          required: true
          description: name of remote article-json file
      responses:
        200:
          description: the remote article-json
        404:
          description: given remote article-json file not found
